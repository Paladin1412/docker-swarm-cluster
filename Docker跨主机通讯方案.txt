


多台主机：

通过在Docker主机上添加静态路由实现跨宿主机通信：

########### start ################

ps -ef|grep docker

/usr/bin/docker-proxy -proto tcp -host-ip 0.0.0.0 -host-port 60020 -container-ip 172.18.0.2 -container-port 60020

 参考:https://docs.docker.com/swarm/install-manual/

1）安装docker , ssh 互通


2) /etc/docker/daemon.json (加了这个systemctl start docker 报错, dockerd可以启动)
{
  "registry-mirrors": ["https://n1czrt72.mirror.aliyuncs.com"],

  "insecure-registries": ["172.20.1.10:5000"],

   "hosts": ["tcp://0.0.0.0:2375", "unix:///var/run/docker.sock"]
}


****
在./etc/docker/daemon.json中添加"hosts":["tcp://0.0.0.0:2375", "unix:///var/run/docker.sock"]启动失败;

原因是 docker 的 socket 配置hosts出现了冲突,需要注意的是配置host也能重启但是不生效；

解决方法：

centos中找到/usr/lib/systemd/system/docker.service,将其中的
ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock 
修改成
ExecStart=/usr/bin/dockerd

再执行systemctl reset-failed docker.service && systemctl restart docker;
***



--bip can be used to set a preferred IP address"

Default bridge (docker0) is assigned with an IP address 172.17.0.0/16
                                                        172.20.1.10 


sudo systemctl start docker

systemctl daemon-reload

3) sudo systemctl start docker

systemctl status docker.service

journalctl -u docker > log.txt
tail -f -n 500 log.txt

需要通过命令：ps -ef | grep dockerd

dockerd -D

4) 服务发现consul

运行 ： $ifconfig  eh0 对应的IP (ag07: 172.20.1.10 )

docker run -d -p 8500:8500 --name=consul progrium/consul -server -bootstrap -advertise=172.20.1.10

5)主、从机器上安装 swarm-manager 节点

172.20.1.10机器

docker run -d -p 4000:4000 swarm manage -H :4000 --replication --advertise=172.20.1.10:4000 consul://172.20.1.10:8500

172.20.1.8机器

docker run -d -p 4000:4000 swarm manage -H :4000 --replication --advertise=172.20.1.8:4000 consul://172.20.1.10:8500

6) 将主、从机器加入集群

172.20.1.10机器(ag07)

docker run -d swarm join --advertise=172.20.1.10:2375 consul://172.20.1.10:8500

172.20.1.8 (ag05)

$docker run -d swarm join --advertise=172.20.1.8:2375 consul://172.20.1.10:8500

检查节点信息:(Primary, Replica)


7) docker swarm init 

 docker swarm init






$docker -H 172.20.1.10:2375 ps

如果发现： Cannot connect to the Docker daemon at tcp://172.20.1.8:2375. Is the docker daemon running?

在管理节点

(2) 将管理地址写入 /etc/profile   

echo 'export DOCKER_HOST=tcp://0.0.0.0:2375' >> /etc/profile

使用 /etc/profile 生效

 
source /etc/profile

docker -H:4000 


1, docker-machine install
(1) install
  base=https://github.com/docker/machine/releases/download/v0.16.0 &&
  curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine &&
  sudo mv /tmp/docker-machine /usr/local/bin/docker-machine &&
  chmod +x /usr/local/bin/docker-machine
(2) Install bash completion scripts

应该使用一个固定的IP地址，因为别的容器要使用到。
$ifconfig 可以查看IP地址和网络接口。

$docker-machine ls 
$docker-machine ip <MACHINE-NAME> 

(3) 将已知的容器加入machine

docker-machine create -d none --url=tcp://172.17.0.1:2375 docker01

docker0



1, pull
$docker pull swarm

2, view the version
$docker run --rm swarm -v
 swarm version 1.2.9 (527a849)
 

3, install the service discovery , Use a hosted discovery key store
   run on every node
   
 (1) consul discovery
$docker run -d -p 8500:8500 --name=consul progrium/consul -server -bootstrap 

查看容器IP

docker inspect --format '{{ .NetworkSettings.IPAddress }}' <container-ID>

或者
docker inspect consul

或者：

ps -ef|grep docker|grep 8500

root     20310 20075  0 10:05 ?        00:00:00 /usr/bin/docker-proxy -proto tcp -host-ip 172.17.0.3 -host-port 8500 -container-ip 172.17.0.3 -container-port 8500

docker Gateway, IpAddress

（2） 启动 swarm管理节点(可以在主节点启动，也可以在从节点启动)


 docker run -d -p 4000:4000 swarm manage -H :4000 --replication --advertise 172.17.0.3:4000 consul://172.17.0.3:8500

(3) 启动工作节点(agent)

 docker run -d swarm join --advertise=172.17.0.3:4000 consul://172.17.0.3:8500



故障问题：
bridge-nf-call-iptables is disabled

vi /etc/sysctl.conf

net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1

sysctl -p



使用集群：

 
docker -H 172.17.0.1:2375 ps

docker -H 172.20.1.8:2375 ps

可以查看目前集群中正运行的容器，但不包括swarm manager节点。








################## Docker 自定义网络 ####################



version: '2'
services:
   nginx:
      image: nginx:1.13.12
      container_name: nginx
      restart: always
      networks:
         extnetwork:
            ipv4_address: 72.17.0.2
 
networks:
   extnetwork:
      zhiwei:
         config:
         - subnet: 172.17.0.1/16
           gateway: 172.17.0.1


固定IP为 72.17.0.2

来源：
Gateway": "172.17.0.1",
"IPAddress": "172.17.0.3",



















 
 (1) log on 
 docker login registry.cn-shenzhen.aliyuncs.com/
 (2) tag
 docker tag wurstmeister/kafka:latest registry.cn-shenzhen.aliyuncs.com/agilean/zhiwei-kafka:0.1
 (3) push 
 docker push registry.cn-shenzhen.aliyuncs.com/agilean/zhiwei-kafka:0.1
 